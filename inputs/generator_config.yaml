definitions:
  wait_config: &default_wait_config
    ok_states: ["OK"]
    erred_states: ["ERRED"]
    state_field: "state"

  # --- Modular and Composable Resolver Anchors ---
  project_context_resolver: &project_context_resolver
    project:
      base: "projects"
      check_filter_key: "project_uuid"

  customer_context_resolver: &customer_context_resolver
    customer:
      base: "customers"
      check_filter_key: "customer_uuid"

  tenant_context_resolver: &tenant_context_resolver
    tenant:
      base: "openstack_tenants"
      check_filter_key: "tenant_uuid"

  project_customer_resolvers: &project_customer_resolvers
    <<:
      [
        *project_context_resolver,
        *customer_context_resolver
      ]

  base_openstack_resolvers: &base_openstack_resolvers
    <<:
      [
        *project_context_resolver,
        *customer_context_resolver,
        *tenant_context_resolver,
      ]

  filter_by_tenant: &filter_by_tenant
    - source_param: "offering"
      source_key: "scope_uuid"
      target_key: "tenant_uuid"

  image_resolver: &image_resolver
    base: "openstack_images"
    filter_by: *filter_by_tenant

  volume_type_resolver: &volume_type_resolver
    base: "openstack_volume_types"
    filter_by: *filter_by_tenant

collections:
  - namespace: waldur
    name: structure
    version: 1.0.0
    modules:
      - name: project
        plugin: crud
        base_operation_id: "projects"
        resolvers:
          customer:
            base: "customers"
            check_filter_key: "customer"
          type: "project_types"

      - name: customer
        plugin: crud
        base_operation_id: "customers"
        skip_resolver_check:
          - homepage

      - name: project_facts
        plugin: facts
        base_operation_id: "projects"
        resolvers:
          customer:
            base: "customers"
            check_filter_key: "customer"

      - name: ssh_key_facts
        plugin: facts
        base_operation_id: "keys"

  - namespace: waldur
    name: marketplace
    version: 1.0.0
    modules:
      - name: offering_facts
        plugin: facts
        base_operation_id: "marketplace_public_offerings"
        resolvers:
          <<: *customer_context_resolver

      - name: order_facts
        plugin: facts
        base_operation_id: "marketplace_orders"

      - name: resource_facts
        plugin: facts
        base_operation_id: "marketplace_resources"
        resolvers:
          <<: *project_context_resolver

      - name: order
        plugin: crud
        base_operation_id: "marketplace_orders"
        resolvers:
          customer: "customers"
          project: "projects"
          offering: "marketplace_public_offerings"

      - name: offering
        plugin: crud
        base_operation_id: "marketplace_provider_offerings"
        resolvers:
          category: "marketplace_categories"
          customer: "customers"

  - namespace: waldur
    name: openstack
    version: 1.0.0
    modules:
      # --- Facts Modules (Read-Only) ---
      - name: vpc_facts
        plugin: facts
        base_operation_id: "openstack_tenants"
        resolvers:
          <<: *project_customer_resolvers

      - name: volume_facts
        plugin: facts
        base_operation_id: "openstack_volumes"
        resolvers:
          <<: *base_openstack_resolvers

      - name: instance_facts
        plugin: facts
        base_operation_id: "openstack_instances"
        resolvers:
          <<: *base_openstack_resolvers

      - name: security_group_facts
        plugin: facts
        base_operation_id: "openstack_security_groups"
        many: true
        resolvers:
          <<: *base_openstack_resolvers

      - name: subnet_facts
        plugin: facts
        base_operation_id: "openstack_subnets"
        many: true
        resolvers:
          <<: *base_openstack_resolvers

      - name: network_facts
        plugin: facts
        base_operation_id: "openstack_networks"
        many: true
        resolvers:
          <<: *base_openstack_resolvers

      - name: flavor_facts
        plugin: facts
        base_operation_id: "openstack_flavors"
        many: true

      - name: image_facts
        plugin: facts
        base_operation_id: "openstack_images"
        many: true

      - name: volume_type_facts
        plugin: facts
        base_operation_id: "openstack_volume_types"
        many: true

      # --- Order Modules (Marketplace Resources) ---
      - name: vpc
        plugin: order
        offering_type: OpenStack.Tenant
        base_operation_id: "openstack_tenants"
        has_limits: true
        resolvers:
          <<: *project_context_resolver

      - name: volume
        plugin: order
        offering_type: OpenStack.Volume
        base_operation_id: "openstack_volumes"
        transformations:
          size: "gb_to_mb"
        resolvers:
          <<: *project_context_resolver
          type: *volume_type_resolver
          image: *image_resolver
          availability_zone:
            base: "openstack_volume_availability_zones"
            filter_by: *filter_by_tenant

      - name: instance
        plugin: order
        offering_type: OpenStack.Instance
        base_operation_id: "openstack_instances"
        transformations:
          data_volume_size: "gb_to_mb"
          system_volume_size: "gb_to_mb"
        operations:
          update:
            actions:
              update_ports:
                operation: "openstack_instances_update_ports"
                param: "ports"
                compare_key: "ports"
              update_security_groups:
                operation: "openstack_instances_update_security_groups"
                param: "security_groups"
                compare_key: "security_groups"
              update_floating_ips:
                operation: "openstack_instances_update_floating_ips"
                param: "floating_ips"
                compare_key: "floating_ips"
          delete:
            attributes:
              - name: termination_action
                maps_to: action
                type: str
                description: Force destroy avoids to bypass standard validations and directly deletes the instance.
                choices:
                  - destroy
                  - force_destroy
              - name: delete_volumes
                type: bool
                description: "If true, delete attached volumes on termination."
              - name: release_floating_ips
                type: bool
                description: "If true, release associated floating IPs on termination."
        wait_config: *default_wait_config
        resolvers:
          <<: *project_context_resolver
          flavor:
            base: "openstack_flavors"
            filter_by: *filter_by_tenant
          image: *image_resolver
          system_volume_type: *volume_type_resolver
          data_volume_type: *volume_type_resolver
          security_groups:
            base: "openstack_security_groups"
            filter_by: *filter_by_tenant
          availability_zone:
            base: "openstack_instance_availability_zones"
            filter_by: *filter_by_tenant
          subnet:
            base: "openstack_subnets"
            filter_by: *filter_by_tenant
          ssh_public_key: "keys"

      # --- CRUD Modules (Directly Managed Resources) ---
      - name: security_group
        plugin: crud
        wait_config: *default_wait_config
        resource_type: "OpenStack security group"
        description: "Manage OpenStack Security Groups and their rules in Waldur."
        base_operation_id: "openstack_security_groups"
        operations:
          update:
            actions:
              set_rules:
                operation: "openstack_security_groups_set_rules"
                param: "rules"
          create:
            id: "openstack_tenants_create_security_group"
            path_params:
              uuid: "tenant"
        resolvers:
          <<: *base_openstack_resolvers
          remote_group:
            base: "openstack_security_groups"
            filter_by:
              - source_param: "tenant"
                source_key: "uuid"
                target_key: "tenant_uuid"

      - name: network
        plugin: crud
        wait_config: *default_wait_config
        resource_type: "OpenStack network"
        description: "Manage OpenStack Networks in Waldur."
        base_operation_id: "openstack_networks"
        operations:
          update:
            actions:
              set_mtu:
                operation: "openstack_networks_set_mtu"
                param: "mtu"
          create:
            id: "openstack_tenants_create_network"
            path_params:
              uuid: "tenant"
        resolvers:
          <<: *base_openstack_resolvers

      - name: network_rbac_policy
        plugin: crud
        resource_type: "OpenStack network RBAC policy"
        description: "Manage OpenStack Network RBAC policies in Waldur."
        base_operation_id: "openstack_network_rbac_policies"
        operations:
          create:
            id: "openstack_networks_rbac_policy_create"
            path_params:
              uuid: "network"
          destroy:
            id: "openstack_networks_rbac_policy_delete_destroy"
            path_params:
              uuid: "network"
              rbac_policy_uuid: "name"
        resolvers:
          tenant: "openstack_tenants"
          target_tenant: "openstack_tenants"
          network:
            base: "openstack_networks"
            filter_by:
              - source_param: "tenant"
                source_key: "uuid"
                target_key: "tenant_uuid"
            check_filter_key: "network_uuid"

      - name: server_group
        plugin: crud
        wait_config: *default_wait_config
        resource_type: "OpenStack server group"
        description: "Manage OpenStack Server Groups (Affinity Groups) in Waldur."
        base_operation_id: "openstack_server_groups"
        operations:
          create:
            id: "openstack_tenants_create_server_group"
            path_params:
              uuid: "tenant"
        resolvers:
          <<: *base_openstack_resolvers

      - name: subnet
        plugin: crud
        wait_config: *default_wait_config
        resource_type: "OpenStack subnet"
        description: "Manage OpenStack subnets in Waldur."
        base_operation_id: "openstack_subnets"
        operations:
          create:
            id: "openstack_networks_create_subnet"
            path_params:
              uuid: "network"
        resolvers:
          <<: *base_openstack_resolvers
          network:
            base: "openstack_networks"
            filter_by:
              - source_param: "tenant"
                source_key: "uuid"
                target_key: "tenant_uuid"

      - name: floating_ip
        plugin: crud
        wait_config: *default_wait_config
        resource_type: "OpenStack floating IP"
        description: "Manage OpenStack Floating IPs in Waldur."
        base_operation_id: "openstack_floating_ips"
        operations:
          update:
            actions:
              update_description:
                operation: "openstack_floating_ips_update_description"
                param: "description"
          create:
            id: "openstack_tenants_create_floating_ip"
            path_params:
              uuid: "tenant"
        resolvers:
          <<: *base_openstack_resolvers

      # --- Action Modules ---
      - name: subnet_action
        plugin: actions
        resource_type: "OpenStack subnet"
        description: "Perform actions on OpenStack Subnets."
        wait_config: *default_wait_config
        base_operation_id: "openstack_subnets"
        actions:
          - connect
          - disconnect
          - pull
          - unlink
        resolvers:
          <<: *base_openstack_resolvers

      - name: network_action
        plugin: actions
        resource_type: "OpenStack network"
        description: "Perform actions on OpenStack networks."
        wait_config: *default_wait_config
        base_operation_id: "openstack_networks"
        actions:
          - pull
          - unlink
        resolvers:
          <<: *base_openstack_resolvers

      - name: instance_action
        plugin: actions
        resource_type: "OpenStack instance"
        description: "Perform actions on OpenStack instance."
        wait_config: *default_wait_config
        base_operation_id: "openstack_instances"
        actions:
          - start
          - stop
          - restart
          - pull
          - unlink
        resolvers:
          <<: *base_openstack_resolvers

      - name: vpc_action
        plugin: actions
        resource_type: "OpenStack tenant"
        description: "Perform actions on OpenStack tenant."
        wait_config: *default_wait_config
        base_operation_id: "openstack_tenants"
        actions:
          - pull
          - unlink
        resolvers:
          <<: *project_customer_resolvers
