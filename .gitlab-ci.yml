include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"

cache:
  key:
    files:
      - poetry.lock

Run linters:
  image: registry.hpc.ut.ee/mirror/library/python:3.11-bullseye
  stage: test
  interruptible: true
  rules:
    # Skip tests if said so
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install pre-commit
    - pre-commit run --all

Run unit tests:
  image: registry.hpc.ut.ee/mirror/library/python:3.11-bullseye
  stage: test
  interruptible: true
  rules:
    # Skip tests if said so
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install poetry

     # Install dependencies but not the project itself
    - poetry install --no-root

    # Target only the unit test directory
    - poetry run pytest tests/unit/ --junitxml=unit_report.xml
  artifacts:
    when: always
    reports:
      junit: unit_report.xml

Run E2E tests:
  image: registry.hpc.ut.ee/mirror/library/python:3.11-bullseye
  stage: test
  interruptible: true
  rules:
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install poetry
    - poetry install --no-root

    # Generating Ansible Collections
    - poetry run ansible-waldur-generator

    # Target only the E2E test directory
    - poetry run pytest tests/e2e/ --junitxml=e2e_report.xml --vcr-record=none
  artifacts:
    when: always
    reports:
      junit: e2e_report.xml
