include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"

Run linters:
  image: registry.hpc.ut.ee/mirror/library/python:3.11-bullseye
  stage: test
  interruptible: true
  rules:
    # Skip tests if said so
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install pre-commit
    - pre-commit run --all

Run tests:
  image: registry.hpc.ut.ee/mirror/library/python:3.11-bullseye
  stage: test
  interruptible: true
  rules:
    # Skip tests if said so
    - if: '$SKIP_TESTS == "true" || $SKIP_TESTS == "yes"'
      when: never
    - if: '$CI_COMMIT_BRANCH == "main"'
    # If tagged release
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
    # If event is related to a created merge request
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install poetry
    - poetry install
    - poetry run pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml
