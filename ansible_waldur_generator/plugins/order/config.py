"""
Defines the configuration structure for modules generated by the 'order' plugin.
"""

from dataclasses import dataclass, field

from ansible_waldur_generator.interfaces.config import BaseModuleConfig
from ansible_waldur_generator.plugins.crud.config import (
    ModuleIdempotencySection,
    ModuleResolver,
)


@dataclass
class OrderModuleConfig(BaseModuleConfig):
    """
    Represents the complete, normalized configuration for a single Ansible module
    that operates through the marketplace order workflow.

    This structure is populated by the OrderConfigParser from the user's YAML
    configuration and serves as the single source of truth for the
    OrderContextBuilder.
    """

    # A user-friendly name for the resource, used in documentation and error messages.
    # Example: "OpenStack volume"
    resource_type: str

    # The configuration for the API call that checks if the final resource already exists.
    # This is a mandatory field in the YAML config.
    # The parser will link this to a full SdkOperation object.
    # Example: `existence_check_op: "openstack_volumes_list"`
    existence_check_op: ModuleIdempotencySection

    # (Optional) The configuration for the API call to update an existing resource.
    # If this is not provided, the generated module will not support updates.
    # Example: `update_op: "openstack_volumes_update"`
    update_op: ModuleIdempotencySection | None = None

    # (Optional) A list of parameter names that should trigger an update if their
    # values change. This is only used if `update_op` is defined.
    # Example: `update_check_fields: ["description", "size"]`
    update_check_fields: list[str] = field(default_factory=list)

    # A list of dictionaries defining the parameters that will be placed inside
    # the nested 'attributes' dictionary of the marketplace order request.
    # Standard parameters like 'name' and 'description' are handled automatically.
    # Example:
    #   attribute_params:
    #     - name: size
    #       type: int
    #       required: true
    attribute_params: list[dict] = field(default_factory=list)

    # A dictionary defining how to resolve certain parameters (like 'offering' or
    # 'type') from a user-friendly name/UUID into a full API URL needed by the backend.
    # The 'project' and 'offering' resolvers are standard and handled by the plugin.
    # Example:
    #   resolvers:
    #     type:
    #       list: "openstack_volume_types_list"
    #       retrieve: "openstack_volume_types_retrieve"
    resolvers: dict[str, ModuleResolver] = field(default_factory=dict)
